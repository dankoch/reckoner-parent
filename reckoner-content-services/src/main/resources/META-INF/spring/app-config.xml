<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
        
	<!-- Scans within the base package of the application for @Components to 
		configure as beans -->
	<context:component-scan base-package="com.reckonlabs.reckoner.contentservices" />
	
	<!-- Incorporates Spring configuration information for accessing the DB -->
	<import resource="spring-mongodb-config.xml" />
	<import resource="memcached-config.xml"/>

	<bean id="placeholderProperties"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="order" value="0" />
		<property name="locations">
			<list>
				<value>classpath:reckoner.properties</value>
				<value>file:${serverPropertyOverride}</value>
			</list>
		</property>
	</bean>
	
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters" ref="messageConverters" />
    </bean>
    
    <util:list id="messageConverters">
        <bean id="messageConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
            <property name="marshaller" ref="xmlMarshaller" />
            <property name="unmarshaller" ref="xmlMarshaller" />
        </bean>
        <bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />
        <bean class="org.springframework.http.converter.FormHttpMessageConverter" />
        <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
        <bean class="org.springframework.http.converter.StringHttpMessageConverter" />
        <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
            <property name="objectMapper" ref="reckonerJacksonObjectMapper"/>                   
        </bean>
    </util:list>	
    
    <bean id="xmlMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound">
            <list>
                <value>com.reckonlabs.reckoner.domain.client.google.GoogleTokenResponse</value>
            </list>
        </property>
    </bean>
	
	<!--
	<bean id="reckoningService" class="com.reckonlabs.reckoner.contentservices.service.ReckoningServiceImpl"/>
	<bean id="reckoningRepo" class="com.reckonlabs.reckoner.contentservices.repo.ReckoningRepoMongoImpl"/>
     -->

	<tx:annotation-driven />

	<!-- Activates various annotations to be detected in bean classes: Spring's 
		@Required and @Autowired, as well as JSR 250's @Resource. -->
	<context:annotation-config />

	<!-- Exporter that exposes the Hibernate statistics service via JMX. Autodetects 
		the service MBean, using its bean name as JMX object name. -->
	<context:mbean-export />

    <!-- Reckoner Resource Beans -->
    <bean id="facebookAuthClient" class="com.reckonlabs.reckoner.contentservices.client.FacebookAuthClient">
        <property name="graphApiUrl" value="${reckoner.contentservices.facebook.apiurl}" />
    </bean>
     
    <bean id="googleAuthClient" class="com.reckonlabs.reckoner.contentservices.client.GoogleAuthClient">
        <property name="userTokenUrl" value="${reckoner.contentservices.google.usertokenurl}" />
        <property name="userSelfProfileUrl" value="${reckoner.contentservices.google.userselfprofileurl}" />        
        <property name="clientId" value="${reckoner.contentservices.google.${reckoner.contentservices.environment}.clientid}" />
        <property name="clientSecret" value="${reckoner.contentservices.google.${reckoner.contentservices.environment}.clientsecret}" />
    </bean>
    
    <bean id="serviceProps" class="com.reckonlabs.reckoner.contentservices.utility.ServiceProps">
        <property name="enableServiceAuthentication" value="${reckoner.contentservices.authentication.enable}" />
        <property name="votePersistenceSize" value="${reckoner.contentservices.db.votecollectionsize}" />
        <property name="votePersistenceBytes" value="${reckoner.contentservices.db.votecollectionbytes}" />
        <property name="defaultBio" value="${reckoner.contentservices.user.bio}" />
        <property name="anonymousUser" value="${reckoner.contentservices.user.${reckoner.contentservices.environment}.anonymoususerid}" />
    </bean>
</beans>
